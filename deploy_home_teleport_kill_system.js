const mysql = require('mysql2/promise');
require('dotenv').config();

async function deployHomeTeleportKillSystem() {
  console.log('üè† Deploying New Home Teleport Kill System');
  console.log('==========================================\n');

  try {
    const connection = await mysql.createConnection({
      host: process.env.DB_HOST,
      user: process.env.DB_USER,
      password: process.env.DB_PASSWORD,
      database: process.env.DB_NAME,
      port: process.env.DB_PORT || 3306
    });

    console.log('‚úÖ Database connected successfully!');

    console.log('\nüìã Step 1: Verifying home teleport configurations...');
    const [homeConfigs] = await connection.execute('SELECT COUNT(*) as count FROM home_teleport_configs');
    console.log(`‚úÖ Found ${homeConfigs[0].count} home teleport configurations`);

    console.log('\nüìã Step 2: Checking server configurations...');
    const [servers] = await connection.execute('SELECT COUNT(*) as count FROM rust_servers');
    console.log(`‚úÖ Found ${servers[0].count} Rust servers`);

    await connection.end();

    console.log('\nüéâ Home Teleport Kill System Ready!');
    console.log('\nüìã New System Flow:');
    console.log('1. Player uses SET HOME emote (building slot 3)');
    console.log('2. Bot instantly kills player with: kill "IGN"');
    console.log('3. Player respawns on their bed');
    console.log('4. Bot detects respawn: "player has entered the game"');
    console.log('5. Bot gets player position with: printpos "player"');
    console.log('6. Bot sets home teleport at respawn location');
    console.log('7. Bot shows success message: "home location saved successfully!"');
    console.log('8. Player can now use TELEPORT HOME emote (combat slot 1)');

    console.log('\nüìã Changes Made:');
    console.log('‚úÖ Removed yes/no confirmation system');
    console.log('‚úÖ Added instant kill on set home emote (kill command)');
    console.log('‚úÖ Added respawn detection for home setup');
    console.log('‚úÖ Added automatic position capture after respawn');
    console.log('‚úÖ Added 30-second timeout for setup process');
    console.log('‚úÖ Only shows success message at the end');
    console.log('‚úÖ Kept teleport home functionality unchanged');

    console.log('\nüìã Next Steps:');
    console.log('1. Restart the bot: pm2 restart zentro-bot');
    console.log('2. Test the new system:');
    console.log('   - Player uses SET HOME emote');
    console.log('   - Player gets killed instantly');
    console.log('   - Player respawns on bed');
    console.log('   - Bot automatically sets home');
    console.log('   - Player can teleport home');

    console.log('\nüí° How It Works:');
    console.log('‚Ä¢ SET HOME emote: Instantly kills player with kill command');
    console.log('‚Ä¢ Respawn detection: Monitors "has entered the game" messages');
    console.log('‚Ä¢ Position capture: Uses printpos command after respawn');
    console.log('‚Ä¢ Home storage: Saves coordinates to database');
    console.log('‚Ä¢ Success message: Only shows at the end');
    console.log('‚Ä¢ Timeout: 30 seconds for each step');
    console.log('‚Ä¢ Teleport home: Works exactly as before');

    console.log('\nüöÄ Benefits:');
    console.log('‚Ä¢ No more yes/no spam in chat');
    console.log('‚Ä¢ Automatic home setup after respawn');
    console.log('‚Ä¢ More immersive gameplay');
    console.log('‚Ä¢ Cleaner user experience');

    console.log('\n‚ö†Ô∏è Important Notes:');
    console.log('‚Ä¢ Players must respawn on a bed for home setup');
    console.log('‚Ä¢ If player doesn\'t respawn, home won\'t be set');
    console.log('‚Ä¢ Cooldown system still applies');
    console.log('‚Ä¢ Whitelist system still applies');

  } catch (error) {
    console.error('‚ùå Error deploying home teleport kill system:', error.message);
  }
}

deployHomeTeleportKillSystem();
